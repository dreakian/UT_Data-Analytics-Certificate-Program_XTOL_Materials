repeats=2)
svm_fit <- train(Volume~., data=training,
method="svmLinear2",
trControl=svm_control,
tuneLength=5)
svm_predictions <- predict(svm_fit, newdata=testing)
new_svm_control <- trainControl(method="repeatedcv",
number=3,
repeats=2)
new_svm_fit <- train(Volume~., data=new_training,
method="svmLinear2",
trControl=new_svm_control,
tuneLength=5)
new_svm_predictions <- predict(new_svm_fit, newdata=new_testing)
rf_control <- trainControl(method="repeatedcv",
number=1,
repeats=1)
rf_fit <- train(Volume ~ ., data=training,
method="rf")
rf_predictions <- predict(rf_fit, newdata=testing)
new_rf_control <- trainControl(method="repeatedcv",
number=1,
repeats=1)
new_rf_fit <- train(Volume~., data=new_training,
method="rf")
new_rf_predictions <- predict(new_rf_fit, newdata=new_testing)
gbm_control <- trainControl(method="boot",
number=1)
gbm_fit <- train(Volume ~ ., data=training,
method="gbm",
trControl=gbm_control,
tuneLength=3)
gbm_predictions <- predict(gbm_fit, newdata=testing)
new_gbm_control <- trainControl(method="boot",
number=1)
new_gbm_fit <- train(Volume~., data=new_training,
method="gbm",
trControl=new_gbm_control,
tuneLength=3)
new_gbm_predictions <- predict(new_gbm_fit, newdata=new_testing)
svm_fit
svm_predictions
rf_fit
rf_predictions
gbm_fit
gbm_predictions
new_svm_fit
new_svm_predictions
new_rf_fit
new_rf_predictions
new_gbm_fit
new_gbm_predictions
new_npa_cleaned <- npa_cleaned
new_epa_cleaned$x5StarReviews <- NULL
final_predictions <- predict(new_rf_fit, newdata=new_npa_cleaned)
final_predictions
new_rf_final_predictions <- predict(new_rf_fit, newdata=new_npa_cleaned)
new_rf_final_predictions
new_svm_final_predictions <- predict(new_svm_fit, newdata=new_npa_cleaned)
new_svm_final_predictions
new_gbm_final_predictions <- predict(new_gbm_fit, newdata=new_npa_cleaned)
new_gbm_final_predictions
output <- new_npa_cleaned
output$final_predictions <- new_rf_final_predictions
write.csv(output, file="C3T3_output.csv",
row.names = TRUE)
output <- npa
output$final_predictions <- new_rf_final_predictions
write.csv(output, file="C3T3_output.csv",
row.names = TRUE)
source("~/multiple_regression_R.R")
summmary(df)
library("arules")
library("arulesViz")
df <- read.transactions(file="C:/Users/cralx2k/Desktop/AAA_UT Data Analytics Certificate Program_XTOL_Materials/Course 3/ElectronidexTransactions2017.csv")
summmary(df)
summary(df)
itemFrequencyPlot(df, topN=20, type="absolute")
inspect(df)
length(df)
size(df)
LIST(df)
itemLabels(df)
df <- read.transactions(file="C:/Users/cralx2k/Desktop/AAA_UT Data Analytics Certificate Program_XTOL_Materials/Course 3/ElectronidexTransactions2017.csv", format="basket", sep=",")
summary(df)
inspect(df)
length(df)
size(df)
LIST(df)
itemLabels(df)
itemFrequencyPlot(df, topN=20, type="absolute")
inspect(df[5])
inspect(df[10])
length(df)
size(df)
size(df)
size(df)
LIST(df)
(df)
itemLabels(df)
image(df)
image(df[0:20])
image(df[20])
image(df[20])
image(df[0:100])
inspect(df[10])
inspect(df[0:10])
df.max()
max(df)
df <- read.transactions(file="C:/Users/cralx2k/Desktop/AAA_UT Data Analytics Certificate Program_XTOL_Materials/Course 3/ElectronidexTransactions2017.csv", format="basket", sep=",", rm.duplicates=TRUE)
summary(df)
itemFrequencyPlot(df, topN=20, type="absolute")
image(df[0:100])
LIST(df)
itemLabels(df)
View(df)
summary(df)
source("C:/Users/cralx2k/Desktop/AAA_UT Data Analytics Certificate Program_XTOL_Materials/Course 3/market_basket_analysis.R")
library("arules")
library("arulesViz")
df <- read.transactions(file="C:/Users/cralx2k/Desktop/AAA_UT Data Analytics Certificate Program_XTOL_Materials/Course 3/ElectronidexTransactions2017.csv", format="basket", sep=",", rm.duplicates=TRUE)
summary(df)
itemLabels(df)
itemFrequencyPlot(df, topN=20, type="absolute")
image(df[0:100])
rules_name <- apriori(df, parameter=list(supp=0.1, conf=0.8))
inspect(rules_name)
rules_name <- apriori(df, parameter=list(supp=0.1, conf=0.7))
inspect(rules_name)
rules_name <- apriori(df, parameter=list(supp=0.1, conf=0.6))
inspect(rules_name)
rules_name <- apriori(df, parameter=list(supp=0.1, conf=0.5))
inspect(rules_name)
rules_name <- apriori(df, parameter=list(supp=0.1, conf=0.4))
inspect(rules_name)
rules_name <- apriori(df, parameter=list(supp=0.1, conf=0.3))
inspect(rules_name)
rules_name <- apriori(df, parameter=list(supp=0.5, conf=0.3))
inspect(rules_name)
rules_name <- apriori(df, parameter=list(supp=0.9, conf=0.3))
inspect(rules_name)
summary(rules_name)
rules_name <- apriori(df, parameter=list(supp=0.9, conf=0.3, minlen=5))
inspect(rules_name)
summary(rules_name)
rules<- apriori(df, parameter=list(supp=0.1, conf=0.1, minlen=1))
inspect(rules)
summary(rules_name)
inspect(rules)
rules<- apriori(df, parameter=list(supp=0.1, conf=0.5, minlen=1))
inspect(rules)
summary(rules_name)
inspect(rules)
rules<- apriori(df, parameter=list(supp=0.1, conf=0.1, minlen=1))
inspect(rules)
rules<- apriori(df, parameter=list(supp=0.1, conf=0.1, minlen=5))
inspect(rules)
summary(rules_name)
rules<- apriori(df, parameter=list(supp=0.1, conf=0.1, minlen=1))
inspect(rules)
summary(rules_name)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.1, minlen=1))
inspect(rules)
summary(rules_name)
rules<- apriori(df, parameter=list(supp=0.09, conf=0.1, minlen=1))
inspect(rules)
summary(rules_name)
rules<- apriori(df, parameter=list(supp=1, conf=0.1, minlen=1))
inspect(rules)
summary(rules_name)
rules<- apriori(df, parameter=list(supp=0.2, conf=0.1, minlen=1))
inspect(rules)
summary(rules_name)
rules<- apriori(df, parameter=list(supp=0.2, conf=0.5, minlen=1))
inspect(rules)
summary(rules_name)
rules<- apriori(df, parameter=list(supp=0.1, conf=0.1, minlen=1))
inspect(rules)
summary(rules_name)
summary(rules)
source("C:/Users/cralx2k/Desktop/AAA_UT Data Analytics Certificate Program_XTOL_Materials/Course 3/market_basket_analysis.R")
library("arules")
library("arulesViz")
df <- read.transactions(file="C:/Users/cralx2k/Desktop/AAA_UT Data Analytics Certificate Program_XTOL_Materials/Course 3/ElectronidexTransactions2017.csv", format="basket", sep=",", rm.duplicates=TRUE)
summary(df)
itemLabels(df)
itemFrequencyPlot(df, topN=20, type="absolute")
image(df[0:100])
rules<- apriori(df, parameter=list(supp=0.1, conf=0.1, minlen=1))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.1, conf=0.5, minlen=1))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.5, minlen=1))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.1, conf=0.5, minlen=1))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.1, conf=0.1, minlen=1))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.1, conf=0.2, minlen=1))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.09, conf=0.2, minlen=1))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.09, conf=0.1, minlen=1))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.05, conf=0.1, minlen=1))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.05, conf=0.5, minlen=1))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.5, minlen=1))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=1, minlen=1))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.8, minlen=1))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.6, minlen=1))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.5, minlen=1))
inspect(rules)
summary(rules)
inspect(rules[0:5])
inspect(sort(df, by="Type of Measurement"))
inspect(sort(rules, by="Type of Measurement"))
sort(rules, by="Type of Measurement")
inspect(sort(rules, by="support"))
inspect(sort(rules, by="confidence"))
inspect(sort(rules, by="lift"))
inspect(sort(rules, by="support"))
inspect(sort(rules, by="confidence"))
inspect(sort(rules, by="lift"))
inspect(sort(rules, by="confidence"))
inspect(sort(rules, by="support"))
inspect(sort(rules, by="confidence"))
inspect(sort(rules, by="lift"))
?subset
is.redundant(rules)
is.redundant(rules).sum()
sum(is.redundant(rules))
is.redundant(rules)
plot(rules)
plot(rules[1:5], method="graph", control=list(type="items"))
plot(rules, method="graph", control=list(type="items"))
plot(rules, method="graph", engine="htmlwidget")
rules<- apriori(df, parameter=list(supp=0.01, conf=0.25, minlen=1))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.45, minlen=1))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.35, minlen=1))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.35, minlen=2))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.35, minlen=5))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.35, minlen=3))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.35, minlen=3, maxlen=3))
rules<- apriori(df, parameter=list(supp=0.01, conf=0.35, minlen=3, maxlen=2))
rules<- apriori(df, parameter=list(supp=0.01, conf=0.35, minlen=3, maxlen=1))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.35, minlen=3, maxlen=1))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.35, minlen=3, maxlen=5))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.35, minlen=3, maxlen=3))
rules<- apriori(df, parameter=list(supp=0.01, conf=0.35, minlen=3, maxlen=2))
rules<- apriori(df, parameter=list(supp=0.01, conf=0.6, minlen=3, maxlen=2))
rules<- apriori(df, parameter=list(supp=0.01, conf=0.6, minlen=3, maxlen=5))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.9, minlen=3, maxlen=5))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.55, minlen=3, maxlen=5))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.02, conf=0.55, minlen=3, maxlen=5))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.55, minlen=3, maxlen=5))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.45, minlen=3, maxlen=5))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.35, minlen=3, maxlen=5))
inspect(rules)
summary(rules)
rules<- apriori(df, parameter=list(supp=0.01, conf=0.40, minlen=3, maxlen=5))
inspect(rules)
summary(rules)
hp_laptop_rules <- subset(rules, items %in% "HP Laptop")
imac_rules <- subset(rules, items %in% "iMac")
summary(hp_laptop_rules)
summary(imac_rules)
source("C:/Users/cralx2k/Desktop/AAA_UT Data Analytics Certificate Program_XTOL_Materials/Course 3/market_basket_analysis.R")
source("C:/Users/cralx2k/Desktop/AAA_UT Data Analytics Certificate Program_XTOL_Materials/Course 3/market_basket_analysis.R")
library("arules")
library("arulesViz")
df <- read.transactions(file="C:/Users/cralx2k/Desktop/AAA_UT Data Analytics Certificate Program_XTOL_Materials/Course 3/ElectronidexTransactions2017.csv", format="basket", sep=",", rm.duplicates=TRUE)
summary(df)
itemLabels(df)
itemFrequencyPlot(df, topN=20, type="absolute")
image(df[0:100])
rules<- apriori(df, parameter=list(supp=0.01, conf=0.40, minlen=3, maxlen=5))
inspect(rules)
summary(rules)
inspect(sort(rules, by="support"))
inspect(sort(rules, by="confidence"))
inspect(sort(rules, by="lift"))
is.redundant(rules)
hp_laptop_rules <- subset(rules, items %in% "HP Laptop")
summary(hp_laptop_rules)
imac_rules <- subset(rules, items %in% "iMac")
summary(imac_rules)
plot(rules)
plot(rules, method="graph", control=list(type="items"))
plot(rules, method="graph", engine="htmlwidget")
library("arules")
library("arulesViz")
df <- read.transactions(file="C:/Users/cralx2k/Desktop/AAA_UT Data Analytics Certificate Program_XTOL_Materials/Course 3/ElectronidexTransactions2017.csv", format="basket", sep=",", rm.duplicates=TRUE)
summary(df)
itemLabels(df)
itemFrequencyPlot(df, topN=20, type="absolute")
image(df[0:100])
rules<- apriori(df, parameter=list(supp=0.01, conf=0.40, minlen=3, maxlen=5))
inspect(rules)
summary(rules)
inspect(sort(rules, by="support"))
inspect(sort(rules, by="confidence"))
inspect(sort(rules, by="lift"))
is.redundant(rules)
hp_laptop_rules <- subset(rules, items %in% "HP Laptop")
summary(hp_laptop_rules)
inspect(hp_laptop_rules)
imac_rules <- subset(rules, items %in% "iMac")
summary(imac_rules)
inspect(imac_rules)
plot(rules)
plot(rules, method="graph", control=list(type="items"))
plot(rules, method="graph", engine="htmlwidget")
source("C:/Users/cralx2k/Desktop/AAA_UT Data Analytics Certificate Program_XTOL_Materials/Course 3/market_basket_analysis.R")
library("arules")
library("arulesViz")
df <- read.transactions(file="C:/Users/cralx2k/Desktop/AAA_UT Data Analytics Certificate Program_XTOL_Materials/Course 3/ElectronidexTransactions2017.csv", format="basket", sep=",", rm.duplicates=TRUE)
summary(df)
itemLabels(df)
itemFrequencyPlot(df, topN=20, type="absolute")
image(df[0:100])
rules<- apriori(df, parameter=list(supp=0.01, conf=0.40, minlen=3, maxlen=5))
inspect(rules)
summary(rules)
inspect(sort(rules, by="support"))
inspect(sort(rules, by="confidence"))
inspect(sort(rules, by="lift"))
is.redundant(rules)
hp_laptop_rules <- subset(rules, items %in% "HP Laptop")
summary(hp_laptop_rules)
inspect(hp_laptop_rules)
imac_rules <- subset(rules, items %in% "iMac")
summary(imac_rules)
inspect(imac_rules)
plot(rules)
plot(rules, method="graph", control=list(type="items"))
plot(rules, n=10,  method="graph", engine="htmlwidget")
plot(rules, n=10,  method="graph", engine="htmlwidget")
plot(rules, n=5,  method="graph", engine="htmlwidget")
plot(rules, method="graph", engine="htmlwidget")
subrules <- head(rules, n=10, by="confidence")
plot(subrules, method="graph", engine="htmlwidget")
plot(rules, method="graph", engine="htmlwidget")
itemFrequencyPlot(df, topN=20, type="absolute")
imac_rules <- subset(rules, items %in% "iMac")
summary(imac_rules)
inspect(imac_rules)
plot(rules)
inspect(rules)
summary(rules)
plot(rules)
plot(rules, method="graph", control=list(type="items"))
plot(rules, method="graph", engine="htmlwidget")
subrules <- head(rules, n=10, by="confidence")
plot(subrules, method="graph", engine="htmlwidget")
subrules <- head(rules, n=10, by="support")
plot(subrules, method="graph", engine="htmlwidget")
subrules <- head(rules, n=10, by="lift")
plot(subrules, method="graph", engine="htmlwidget")
plot(subrules, method="graph", engine="htmlwidget")
plot(subrules, method="paracoord")
plot(subrules, n=5, method="paracoord")
plot(subrules, n=5, method="paracoord")
subrules <- head(rules, n=5, by="lift")
plot(subrules, method="graph", engine="htmlwidget")
plot(subrules, n=5, method="paracoord")
subrules <- head(rules, n=5, by="support")
plot(subrules, method="graph", engine="htmlwidget")
plot(subrules, n=5, method="paracoord")
subrules <- head(rules, n=5, by="support")
plot(subrules, method="graph", engine="htmlwidget")
plot(subrules, n=5, method="paracoord")
plot(subrules, method="paracoord")
subrules <- head(rules, n=5, by="support")
plot(subrules, method="graph", engine="htmlwidget")
subrules <- head(rules, n=15, by="support")
plot(subrules, method="graph", engine="htmlwidget")
source("C:/Users/cralx2k/Desktop/AAA_UT Data Analytics Certificate Program_XTOL_Materials/Course 3/market_basket_analysis.R")
a
library(RMariaDB)
con = dbConnect(MariaDB(), user="deepAnalytics",
password="Sqltask1234!",
dbname="dataanalytics2018",
host="data-analytics-2018.cbrosir2cswx.us-east-1.rds.amazonaws.com")
dbListTables(con)
dbListFields(con, "yr_2006") # do this for 2007, 2008, 2009 and 2010
yr_2006 <- dbGetQuery(con, "SELECT * FROM yr_2006")
yr_2007 <- dbGetQuery(con, "SELECT * FROM yr_2007")
yr_2008 <- dbGetQuery(con, "SELECT * FROM yr_2008")
yr_2009 <- dbGetQuery(con, "SELECT * FROM yr_2009")
yr_2010 <- dbGetQuery(con, "SELECT * FROM yr_2010")
str(yr_2006)
summary(yr_2006)
head(yr_2006)
tail(yr_2006)
str(yr_2006)
str(yr_2007)
str(yr_2008)
str(yr_2009)
str(yr_2010)
summary(yr_2006)
summary(yr_2007)
summary(yr_2008)
summary(yr_2009)
summary(yr_2010)
head(yr_2006)
tail(yr_2006)
head($Date)
head(yr_2006$Date)
tail(yr_2006$Date)
yr_2006$date
yr_2006$Date
yr_2006$Date.min()
min(yr_2006$Date)
max(yr_2006$Date)
min(yr_2007$Date)
max(yr_2007$Date)
min(yr_2008$Date)
max(yr_2008$Date)
min(yr_2009$Date)
max(yr_2009$Date)
min(yr_2010$Date)
max(yr_2010$Date)
min(yr_2006$Date)
max(yr_2006$Date)
min(yr_2007$Date)
max(yr_2007$Date)
min(yr_2008$Date)
max(yr_2008$Date)
min(yr_2009$Date)
max(yr_2009$Date)
min(yr_2010$Date)
max(yr_2010$Date)
min(yr_2006$Date)
max(yr_2006$Date)
min(yr_2007$Date)
max(yr_2007$Date)
min(yr_2008$Date)
max(yr_2008$Date)
min(yr_2009$Date)
max(yr_2009$Date)
min(yr_2010$Date)
max(yr_2010$Date)
df <- bind_rows(yr_2007, yr_2008, yr_2009)
library(dbplyr)
df <- bind_rows(yr_2007, yr_2008, yr_2009)
library(dplyr)
df <- bind_rows(yr_2007, yr_2008, yr_2009)
df
str(df)
summary(df)
min(df$Date)
max(df$Date)
View(df)
df <- cbind(df, paste(df$Date, df$Time), stringsAsFactors=FALSE)
str(df)
colnames(df)[11] <- "Date_Time"
str(df)
df <- df[,c(ncol(df), 1:(ncol(df)-1))]
head(df)
str(df)
View(df)
source("C:/Users/cralx2k/Desktop/AAA_UT Data Analytics Certificate Program_XTOL_Materials/Course 4/C4_T1.R")
